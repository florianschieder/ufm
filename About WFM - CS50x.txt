Hello everybody, I am Florian Schieder, and I want to present you my final project.
(-> Videoschnitt: Unbedingt "Orts-Overlay" - Symbol: Florian Schieder, 17, Georgenberg, Bavaria/Germany)!!!
As you can see, the software I created is a two-pane file manager. I simply called it "WFM", short for "Windows File Manager".

Windows File Manager is entirely coded in native C++ using Visual Studio 2019 Community. Instead of using external frameworks or MFC, I decided to wrap up the Windows API functions I required into my own toolkit, which made me able to declare UIs in a "Windows Forms"-like and comfortable way.

While designing the User Interface of my application, I always recalled the interface and the usability of Total Commander, my favorite file manager I have been using for years.

The navigation is very similar to Windows Explorer. You can also change the current location via the address bar above, or, if I decide to switch over to the DVD drive, this can easily be done through the selection box.

As you can see, the most common actions like
- editing,
- copying and moving a file or directory,
- creating a new directory,
- sending an item into the Recycle Bin,
- renaming an item or showing its properties,
- printing a file,
- running an application as administrator
- or spawning a command prompt within the selected directory,
are integrated into the toolbar or the button bar at the bottom of the window, with respective shortcuts. 

Windows File Manager also provides a built-in File viewer, which is able to display text files, binary files and the most popular image formats.
Of course, Windows File Manager shows errors or messages, if you try to perform operations in a not intended way.
Each time I close it, my application stores the selected path which makes me able to continue my last session when I open up Windows File Manager again.